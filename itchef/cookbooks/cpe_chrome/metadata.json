{
  "name": "cpe_chrome",
  "description": "Manage and configure Chrome browser",
  "long_description": "cpe_chrome\n==========\n\nDescription\n-----------\nConfigures any custom settings for Google Chrome, or Chrome Canary.\n\nRequirements\n------------\n* Linux\n* macOS\n* Windows\n\nAttributes\n----------\n* node['cpe_chrome']['profile']\n* node['cpe_chrome']['mp']\n* node['cpe_chrome']['canary_ignored_prefs']\n\nUsage\n-----\nManage all of the Chrome settings and the Master Preferences file.\n`node['cpe_chrome']['profile']` is a hash of all the settings that will be\napplied as managed policies. `node['cpe_chrome']['mp']` is a hash of all\nsettings that will be applied in Master Preferences.\n\n### Managed Policies\n\nFor Chrome and Chrome Canary the list of managed polices can be found here:\nhttps://cloud.google.com/docs/chrome-enterprise/policies\n\nAll policy-managed settings are stored in the node['cpe_chrome']['profile'] hash.\n\nTo add a managed setting to your profile, simply add the key from the URL list\nabove to this hash:\n\n```\n{\n  'DefaultBrowserSettingEnabled' => false,\n  'SitePerProcess' => true\n}.each do |k, v|\n  node.default['cpe_chrome']['profile'][k] = v\nend\n```\n\nTo exclude a managed setting from Chrome Canary, add the key to the array:\n\n```\n{\n  'RelaunchNotification',\n  'RelaunchNotificationPeriod',\n}.each do |setting|\n  node.default['cpe_chrome']['canary_ignored_prefs'] << setting\nend\n```\n\n#### Extensions managed by policy\n\n`node['cpe_chrome']['profile']['ExtensionInstallForcelist']`\n\n* Extension ids added here are enforced by policy and cannot be disabled by\n  the user\n* Must be the extension ID followed by the Update URL.\n* The extension ID can be found in the URL from the Web Store, or at\n  [chrome://extensions]()\n* The Update URL for the Chrome Web Store is always\n  \"https://clients2.google.com/service/update2/crx\"\n\nThis example is the LastPass extension from the Chrome Web Store:\n\n```\n# Install the LastPass extension\nchrome_ext_update_url = 'https://clients2.google.com/service/update2/crx'\n{\n  'ExtensionInstallForcelist' => [\n    \"hdokiejnpimakedhajhdlcegeplioahd;#{chrome_ext_update_url}\",\n  ],\n}.each do |k, v|\n  node.default['cpe_chrome']['profile'][k] = v\nend\n```\n\nLikewise, extensions can be Blocklisted (and thus forcibly removed from\nthe browser by policy):\n\n```\n# Forcefully remove the BetterHistory malware extension\nchrome_ext_update_url = 'https://clients2.google.com/service/update2/crx'\n{\n  'ExtensionInstallBlocklist' => [\n    'obciceimmggglbmelaidpjlmodcebijb',\n  ],\n}.each do |k, v|\n  node.default['cpe_chrome']['profile'][k] = v\nend\n```\n\n`node['cpe_chrome']['profile']['ExtensionInstallSources']` is a list of URL\nsources where extensions may be installed from.\nSee https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ExtensionInstallSources\nfor details.\n\n### Master Preferences\n\nIn addition to enforcing managed policies, this cookbook can also manage the\n'Master Preferences' file.\nSee https://www.chromium.org/administrators/configuring-other-preferences for\ndetails.\n\nThe Master Preferences file configuration is handled by the\n`node['cpe_chrome']['mp']['FileContents']` attribute.\nThis hash should contain keys that are described in the link above.  An example:\n\n```\nnode.default['cpe_chrome']['mp']['FileContents'] = {\n  'bookmark_bar' => {\n    'show_all_tabs' => true,\n  },\n  'distribution' => {\n    'import_bookmarks' => false,\n    'skip_first_run_ui' => false,\n    'show_welcome_page' => false,\n    'suppress_first_run_bubble' => true,\n    'do_not_register_for_update_launch' => false,\n    'verbose_logging' => true,\n  },\n  'first_run_tabs' => [\n    'https://www.facebook.com',\n  ],\n  'homepage' => 'http://www.facebook.com',\n  'sync_promo' => {\n    'show_on_first_run_allowed' => false,\n  },\n  'browser' => {\n    'check_default_browser' => false,\n  },\n}\n```\n\nThe Master Preferences file will only be written to disk if the node attribute\n`node['cpe_chrome']['mp']['UseMasterPreferencesFile']` is `true`:\n\n```\n  node.default['cpe_chrome']['mp']['UseMasterPreferencesFile'] = true\n```\n\n### Linux\n\nOn Linux, to avoid installing chrome and the repos, your node must have\nthe attributes `manage_repo` and `install_package` set to `false`:\n\n```\n  node.default['cpe_chrome']['manage_repo'] = false\n  node.default['cpe_chrome']['install_package'] = false\n```\n\nThese attributes are set to true by default. It can be disabled by\nadding the above commands to your cpe_user_customizations::${USER}.\n\n*macOS Only*\nThe profile's organization key defaults to `Facebook` unless\n`node['organization']` is configured in your company's custom init recipe.\n\n### Windows compatibility\n\nOn Windows, Chrome policy is stored in the registry, in\n`HKEY_LOCAL_MACHINE\\\\Software\\\\Policies\\\\Google\\\\Chrome`. These registry keys\nhere are mapped from the `node['cpe_chrome']['profile']` attribute in the\ngen_windows_chrome_known_settings.rb library, which provide a class\nthat converts them.\n\nAs Google adds new keys and deprecates old ones, they may need to be manually\nadded to the chrome_windows.rb library in order to provide support and\ncompatibility.\n\nThis cookbook will automatically cleanup subkeys that are stored in the policy\nregistry key but are not found in the node attribute.\n\nWe detect policies to manage from the Chrome ADMX template.\nThis does not cover *every* setting, so we also\nwill generate policies from a separate reference file that is manually\nmaintained. All reference files are `.reg` files.\n\nTo manually add a registry setting you can add it to\n`win_chrome_manual_policy.reg`.\n\nTo generate settings run the script `windows_policy_gen.rb`. This assumes you\nhave the chefdk installed locally.\n\nAll generated settings are placed\ninto `libraries/gen_windows_chrome_known_settings.rb`.\n",
  "maintainer": "Facebook",
  "maintainer_email": "noreply@facebook.com",
  "license": "Apache-2.0",
  "platforms": {

  },
  "dependencies": {
    "cpe_profiles": ">= 0.0.0",
    "cpe_helpers": ">= 0.0.0",
    "fb_helpers": ">= 0.0.0",
    "fb_osquery": ">= 0.0.0"
  },
  "providing": {

  },
  "recipes": {

  },
  "version": "0.1.0",
  "source_url": "",
  "issues_url": "",
  "privacy": false,
  "chef_versions": [

  ],
  "ohai_versions": [

  ],
  "gems": [

  ],
  "eager_load_libraries": true
}
