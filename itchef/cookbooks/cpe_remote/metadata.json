{
  "name": "cpe_remote",
  "description": "cpe_remote_pkg and cpe_remote_file ",
  "long_description": "cpe_remote cookbook\n===================\nThis cookbook has two different providers - remote Apple packages (macOS only),\nand remote files (macOS and Windows), from web URLs.\n\nFiles or pkgs must be stored at the server you provided to base_url.\n\nRequirements\n------------\n### Platform\n* Fedora (file provider only)\n* macOS (pkg, file providers)\n* Windows (file provider only)\n\nAttributes\n----------\n* node['cpe_remote']\n* node['cpe_remote']['base_url']\n* node['cpe_remote']['server_accessible']\n* node['cpe_remote']['additional_headers']\n\nUsage\n-----\nYou must set `base_url`\n* node['cpe_remote']['base_url']\nwhere are your remote pkgs and files stored - \"https://change.me/chef\"\n\n* node['cpe_remote']['server_accessible']\nis your server accessible? write your own check and set value to true or false.\nIf false the resource wont fire.\n\nThere are two providers in this cookbook. The first is the pkg provider\n(`cpe_remote_pkg`). This provider is compatible with macOS and will install an\nApple package from a URL, unless the package receipt and version match.\n\nThe second provider is a file provider (`cpe_remote_file`). This provider is\ncompatible with macOS and Windows, and will download a file from a URL onto the\nclient, unless the file already exists and matches the checksum.\n\n* node['cpe_remote']['additional_headers']\nThis is a key/value store to allow you to set extra headers in your request\n\n### pkg\n\nThis resource will install a Apple package (`.pkg` file). It will retrieve the\npackage from a remote URL. The package file will be stored in the\n`Chef::Config[:file_cache_path]` and deleted after the install unless you set\n`backup` to the number of files to keep.\n\n#### pkg Actions\n* :install - Install the package.\n\n#### pkg Parameter attributes\n* `allow_downgrade` - BOOL - Downgrade a package to satisfy required version\n                      requirements\n* `app` - [name] This is the name of the app that the pkg will be installing,\n          and the location of the pkg on the server:\n          `base_url/app/app-version.pkg`\n* `checksum` - sha256 checksum of the pkg to download.\n* `backup` - Specify the # of files to backup. Default is 0\n* `force_arm64` - Specify if the pkg requires arm64 `installer`. For example,\n               if you are running chef via Rosetta on Apple Silicon.\n* `pkg_name` - Specify the name of the pkg if it is not the same as\n              `app-version`, or if the name has spaces.\n* `pkg_url` - URL of the pkg on the server if it's different than\n              `base_url/app/app-version.pkg`.\n* `receipt` - Receipt registered with pkgutil when a pkg is installed.\n* `version` - string of version number.\n* `additional_headers` - Extra headers passed to the HTTP server.\n\n#### pkg Examples\nInstall `osquery` from the primary download site.\n\n```ruby\n# in base settings\nnode.default['cpe_remote']['base_url'] = \"https://fb.com/chef/\"\nnode.default['cpe_remote']['additional_headers']['Auth'] = \"Z2VuZXJpY191c2VyOlRoaXMgaXMgbXkgZ2VuZXJpYyBwYXNzd29yZA==\"\n# in some recipe\n# File lives at fb.com/chef/osqueryd/osqueryd-1.1.0.pkg\ncpe_remote_pkg 'osqueryd' do\n  version '1.1.0'\n  checksum '3701fbdc8096756fab077387536535b237e010c45147ea631f7df43e3e4904e0'\n  receipt 'com.facebook.osqueryd'\nend\n```\n\n### file\n\nThis resource will download a file to the client from the server at `base_url`.\nThe file will be stored on the client at `path`.  The `folder_name` specifies\nthe folder on the server where the file is located.  The `file_name` specifies\nthe file within the `folder_name` to download.  The provider will only store\nthe latest version of the file unless you set `backup` to the # of files to\nkeep.\n\n#### file Actions\n* :create - download and place file on the client.\n\n#### file Parameter attributes\n* `folder_name` - [name] This is the name of the folder where the file is\n                  located on the repo.\n* `checksum` - sha256 checksum of the file to download. On macOS, you can use\n               `shasum -a 256 filename` to calculate this.\n* `backup` - Specify the # of files to backup. Default is 0\n* `file_name` - The name of the file being downloaded.\n* `file_url` - The url of the file being downloaded.\n* `mode` - Set the Unix permissions for the downloaded file.\n* `additional_headers` - Extra headers passed to the HTTP server.\n\n#### file Examples\n\n```ruby\n# in base settings\nnode.default['cpe_remote']['base_url'] = \"https://STUFF.co/chef/\"\nnode.default['cpe_remote']['additional_headers']['Auth'] = \"Z2VuZXJpY191c2VyOlRoaXMgaXMgbXkgZ2VuZXJpYyBwYXNzd29yZA==\"\n# https://STUFF.co/chef/cool_things/omgfile\n# in some recipe\ncpe_remote_file 'cool_things' do\n  file_name 'omgfile'\n  checksum the_checksum256_of_the_omgfile\n  path path_of_where_to_put_file\n  mode 0755\nend\n```\n\n##### Install `java_white_list` from the primary download site\n\n```ruby\n# in base settings\nnode.default['cpe_remote']['base_url'] = \"https://STUFF.co/chef/\"\nnode.default['cpe_remote']['additional_headers']['Auth'] = \"Z2VuZXJpY191c2VyOlRoaXMgaXMgbXkgZ2VuZXJpYyBwYXNzd29yZA==\"\n# https://STUFF.co/chef/javaruleset/DeploymentRuleSet.jar\ncpe_remote_file 'javaruleset' do\n  file_name 'DeploymentRuleSet.jar'\n  checksum '2a58674a0a3629ab623af2742ef6d2881f71240e4bd5cbd11671f74d1db86e52'\n  path node['java_ruleset']['whitelist_path']\nend\n```\n\nThe above example will download the DeploymentRuleSet.jar file from the\njavaruleset folder from the server provided at `base_url`. This will only\nhappen if the file is missing from the expected location, or the checksum on\nthe file doesn't match the provided checksum.\n\n### .zip\n\nThis resource will download a .zip file and extract it. The file will be stored\non the client at in the `Chef::Config[:file_cache_path]`. The `folder_name`\nspecifies the folder on the server where the file is located. The `file_name`\nspecifies the file within the `folder_name` to download.\n\n#### .zip Actions\n* :create - download and place file on the client.\n\n#### .zip Parameter attributes\n* `folder_name` - [name] This is the name of the folder where the file is\n                  located on the repo.\n* `zip_checksum` - sha256 checksum of the file to download. On macOS, you can\n                   use `shasum -a 256 filename` to calculate this.\n* `backup` - Specify the # of files to backup. Default is 0\n* `zip_name` - The name of the zip being downloaded\n* `zip_url` - URL of the zip on the server if it's different than\n              `base_url/app/app-version.zip`.\n* `extract_location` - The path of where the zip file will be extracted.\n* `additional_headers` - Extra headers passed to the HTTP server.\n\n#### .zip Examples\n\n```ruby\n# in base settings\nnode.default['cpe_remote']['base_url'] = \"https://STUFF.co/chef/ (https://stuff.co/chef/)\"\nnode.default['cpe_remote']['additional_headers']['Auth'] = \"Z2VuZXJpY191c2VyOlRoaXMgaXMgbXkgZ2VuZXJpYyBwYXNzd29yZA==\"\n# https://STUFF.co/chef/my_zip_files/best.zip\n# in some recipe\ncpe_remote_zip 'my_zip_files' do\nzip_name 'best.zip'\nzip_checksum the_checksum256_of_the_best.zip_file\nextract_location path_of_where_to_extract_zip\nend\n```\n",
  "maintainer": "Facebook",
  "maintainer_email": "noreply@fb.com",
  "license": "Apache-2.0",
  "platforms": {
    "fedora": ">= 0.0.0",
    "mac_os_x": ">= 0.0.0",
    "windows": ">= 0.0.0"
  },
  "dependencies": {
    "cpe_helpers": ">= 0.0.0",
    "cpe_logger": ">= 0.0.0",
    "cpe_utils": ">= 0.0.0"
  },
  "providing": {

  },
  "recipes": {

  },
  "version": "0.1.0",
  "source_url": "",
  "issues_url": "",
  "privacy": false,
  "chef_versions": [

  ],
  "ohai_versions": [

  ],
  "gems": [

  ],
  "eager_load_libraries": true
}
